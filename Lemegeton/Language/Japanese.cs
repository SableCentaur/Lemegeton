using Lemegeton.Core;

namespace Lemegeton.Language
{

    internal class Japanese : Core.Language
    {

        public override bool IsDefault => false;
        public override string LanguageName => "日本語";
        public override bool FontDownloadNecessary => false;
        public override string FontDownload => null;
        public override GlyphRangeEnum GlyphRange => GlyphRangeEnum.Undefined;

        public Japanese(State st) : base(st)
        {
            #region 1.0.1.0
            // do not translate yet please - feature still in development and these may change!
            //AddEntry("MainMenu/Timelines", "Timelines");
            //AddEntry("MainMenu/Timelines/Timelines", "Timelines");
            //AddEntry("MainMenu/Timelines/Overlay", "Overlay");
            //AddEntry("MainMenu/Timelines/Recorder", "Recorder");
            //AddEntry("Timelines/Timeline", "Timeline");
            //AddEntry("Timelines/Profile", "Profile");
            //AddEntry("MainMenu/Timelines/SaveProfile", "Save profile");
            //AddEntry("MainMenu/Timelines/SaveNewProfileAs", "Save new profile as..");
            //AddEntry("MainMenu/Timelines/CloneProfile", "Clone profile");
            //AddEntry("MainMenu/Timelines/DeleteProfile", "Delete profile");
            #endregion
            #region <1.0.1.0
            AddEntry("Command/QuickToggleAutomarkers/On", "Lemegeton: オートマーカーを有効にしました。");
            AddEntry("Command/QuickToggleAutomarkers/Off", "Lemegeton: オートマーカーを無効にしました。");
            AddEntry("Command/QuickToggleOverlays/On", "Lemegeton: 描画とオーバーレイを有効にしました。");
            AddEntry("Command/QuickToggleOverlays/Off", "Lemegeton: 描画とオーバーレイを無効にしました。");
            AddEntry("Command/QuickToggleSound/On", "Lemegeton: サウンド機能を有効にしました。");
            AddEntry("Command/QuickToggleSound/Off", "Lemegeton: サウンド機能を無効にしました。");
            AddEntry("Command/QuickToggleHacks/On", "Lemegeton: ハックとゲーム改変機能を有効にしました。");
            AddEntry("Command/QuickToggleHacks/Off", "Lemegeton: ハックとゲーム改変機能を無効にしました。");
            AddEntry("Command/QuickToggleAutomation/On", "Lemegeton: 自動化機能を有効にしました。");
            AddEntry("Command/QuickToggleAutomation/Off", "Lemegeton: 自動化機能を無効にしました。");
            AddEntry("Command/AutomarkerSoft/On", "Lemegeton: クライアントサイドのソフトオートマーカーを有効にしました。");
            AddEntry("Command/AutomarkerSoft/Off", "Lemegeton: クライアントサイドのソフトオートマーカーを無効にしました。");
            AddEntry("Status/AtAGlance", "一覧");
            AddEntry("Status/CurrentlyActive", "現在有効な機能");
            AddEntry("Status/ImpactToFunctionality", "機能への影響");
            AddEntry("Status/AllIsWell", "すべて正常に動作するはずです!");
            AddEntry("Status/StatusGotOpcodesTrue", "ネットワークオペコード読み込み完了");
            AddEntry("Status/StatusGotOpcodesFalse", "ネットワークオペコードの読み込みに失敗しました!");
            AddEntry("Status/StatusMarkingFuncAvailableTrue", "マーキング機能有効");
            AddEntry("Status/StatusMarkingFuncAvailableFalse", "マーキング機能の有効化に失敗しました!");
            AddEntry("Status/StatusPostCommandAvailableTrue", "コマンド送信機能有効");
            AddEntry("Status/StatusPostCommandAvailableFalse", "コマンド送信機能の有効化に失敗しました!");
            AddEntry("Status/StatusNetworkTrafficUpTrue", "サーバーへの通信は問題ありません");
            AddEntry("Status/StatusNetworkTrafficUpFalse", "過去1分間におけるサーバーへの通信を確認出来ませんでした!");
            AddEntry("Status/StatusNetworkTrafficDownTrue", "サーバーからの通信は問題ありません");
            AddEntry("Status/StatusNetworkTrafficDownFalse", "過去1分間におけるサーバーへの通信を確認出来ませんでした!");
            AddEntry("Status/WarnNoOpcodes", "オペコードが利用できないためネットワーク通信を読み取れず、ゲーム内でのイベントを確認出来ません。つまり、かなり多くの機能が壊れている可能性があります!");
            AddEntry("Status/WarnOpcodesVersion", "オペコード情報が、現在稼働しているゲームバージョン({1})と異なるゲームバージョン({0})のものです - これはゲームのアップデート直後に起こる可能性が高く、アップデートによる修正が必要です。かなり多くの機能が壊れている可能性があります!");
            AddEntry("Status/WarnAutomarkersBroken", "どのマーキング方法も利用できないので、オートマーキングを行うことはできません。つまり、オートマーカーが壊れています!");
            AddEntry("Status/WarnAutomarkersSemibroken", "デフォルトのマーキング方式は使用できませんが、別の手法でのマーキング方式はまだ使用できるようです。つまり、オートマーカーはまだ使えるはずですが、万が一、何か変なことが起きたら、これが原因かもしれません。");
            AddEntry("Status/WarnCommandPostBroken", "デフォルトのマーキング方式は利用できますが、バックアップ用の手法でのマーキング方式は利用できません。オートマーカーへの影響はありませんが、ご参考までに。");
            AddEntry("Status/WarnNoTrafficUp", "ネットワーク通信がサーバーへ届かず、あなたは切断されている可能性かあります。あなたのアクションが反映されないことがあります。");
            AddEntry("Status/WarnNoTrafficDown", "ネットワーク通信がサーバーから受信出来ない場合、ネットワークが切断されているか、プラグインがネットワークデータを受信していない可能性があります。いずれにせよ、サーバーから情報を受信しないと、多くの機能が壊れてしまう可能性があります!");
            AddEntry("Status/WarnHacksActive", "ハックやゲーム改変機能を少なくとも1つ有効にしているます! その効果は、見る人が見れば一目瞭然なので、ストリーミングはお勧めしません。");
            AddEntry("Status/WarnAutomationsActive", "少なくとも1つの自動化機能が有効になっています! その効果は、見る人が見れば一目瞭然なので、ストリーミングはお勧めしません。");
            AddEntry("Status/WarnDrawsActive", "少なくとも1つの画面描画機能またはオーバーレイが有効になっています! ストリーミングを予定している場合は、オーバーレイがキャプチャされないように、キャプチャ設定を確認してください。");
            AddEntry("Status/WarnAutomarkersQuickDisabled", "少なくとも1つのオートマーカーが有効になっていますが、オートマーカーは現在、設定の「クイックトグル」で無効になっています。");
            AddEntry("Status/WarnOverlaysQuickDisabled", "少なくとも1つの画面描画機能またはオーバーレイが有効になっていますが、現在、設定の「クイックトグル」で描画とオーバーレイが無効になっています。");
            AddEntry("Status/WarnSoundQuickDisabled", "少なくとも1つのサウンド通知機能が有効になっていますが、現在、設定の「クイックトグル」でサウンド通知が無効になっています。");
            AddEntry("Status/WarnHackQuickDisabled", "少なくとも1つのハックやゲーム改変機能が有効になっていますが、ハックやゲーム改変機能は現在、設定の「クイックトグル」で無効になっています。");
            AddEntry("Status/WarnAutomationQuickDisabled", "少なくとも1つのオートメーション機能が有効になっていますが、オートメーション機能は現在、設定の「クイックトグル」で無効になっています。");
            AddEntry("Status/NumFeaturesAutomarker", "オートマーカー");
            AddEntry("Status/NumFeaturesDrawing", "描画とオーバーレイ");
            AddEntry("Status/NumFeaturesSound", "サウンド");
            AddEntry("Status/NumFeaturesHack", "ハックやゲーム改変機能");
            AddEntry("Status/NumFeaturesAutomation", "自動化機能");
            AddEntry("SoundEffect/Se1", "Sound Effect 1");
            AddEntry("SoundEffect/Se2", "Sound Effect 2");
            AddEntry("SoundEffect/Se3", "Sound Effect 3");
            AddEntry("SoundEffect/Se4", "Sound Effect 4");
            AddEntry("SoundEffect/Se5", "Sound Effect 5");
            AddEntry("SoundEffect/Se6", "Sound Effect 6");
            AddEntry("SoundEffect/Se7", "Sound Effect 7");
            AddEntry("SoundEffect/Se8", "Sound Effect 8");
            AddEntry("SoundEffect/Se9", "Sound Effect 9");
            AddEntry("SoundEffect/Se10", "Sound Effect 10");
            AddEntry("SoundEffect/Se11", "Sound Effect 11");
            AddEntry("SoundEffect/Se12", "Sound Effect 12");
            AddEntry("SoundEffect/Se13", "Sound Effect 13");
            AddEntry("SoundEffect/Se14", "Sound Effect 14");
            AddEntry("SoundEffect/Se15", "Sound Effect 15");
            AddEntry("SoundEffect/Se16", "Sound Effect 16");
            AddEntry("ObjectKind/None", "なし");
            AddEntry("ObjectKind/Player", "プレイヤー");
            AddEntry("ObjectKind/BattleNpc", "敵/戦闘NPC");
            AddEntry("ObjectKind/EventNpc", "イベントNPC");
            AddEntry("ObjectKind/Treasure", "宝箱");
            AddEntry("ObjectKind/Aetheryte", "エーテライト");
            AddEntry("ObjectKind/GatheringPoint", "採集ポイント");
            AddEntry("ObjectKind/EventObj", "イベントオブジェクト");
            AddEntry("ObjectKind/MountType", "マウント");
            AddEntry("ObjectKind/Companion", "ミニオン");
            AddEntry("ObjectKind/Retainer", "リテイナー");
            AddEntry("ObjectKind/Area", "エリアオブジェクト");
            AddEntry("ObjectKind/Housing", "ハウジングオブジェクト");
            AddEntry("ObjectKind/Cutscene", "カットシーンオブジェクト");
            AddEntry("ObjectKind/CardStand", "カードスタンド");
            AddEntry("ObjectKind/Ornament", "オーナメント");
            AddEntry("Misc/None", "(none)");
            AddEntry("Misc/HQ", "HQ");
            AddEntry("Misc/SavePreset", "プリセットを保存");
            AddEntry("Misc/SaveNewPresetAs", "新しいプリセットとして保存");
            AddEntry("Misc/DeletePreset", "プリセットを削除");
            AddEntry("Misc/OpenShortcut", "レメゲトンを開く");
            AddEntry("Misc/ShowAdvancedOptions", "詳細なオプションを表示する");
            AddEntry("Misc/HideAdvancedOptions", "詳細なオプションを非表示にする");
            AddEntry("Misc/DragToReorderPrio", "左クリック&ドラッグで優先順位を入れ替え");
            AddEntry("Misc/RiskyFeature", "この機能は、ハックまたはゲーム改変機能であり、通常考えられる範囲を超えてゲームデータ/状態を変更する可能性があります。この機能は基本的に安全に使用できますが、この機能を使用したストリーミングは推奨されません。ご自身の判断でご利用ください!");
            AddEntry("Misc/ExperimentalFeature", "これは実験的な機能であり、テスト済みではありますが、まだ見つかっていないバグがあるかもしれません。もしこの機能がうまく機能しなかったり、何か変なことに気づいたりした場合は、修正するためにDiscordサーバーで報告してください!");
            AddEntry("Trinity/Tank", "タンク");
            AddEntry("Trinity/Healer", "ヒーラー");
            AddEntry("Trinity/DPS", "DPS");
            AddEntry("Role/Tank", "タンク");
            AddEntry("Role/Healer", "ヒーラー");
            AddEntry("Role/Melee", "メレー");
            AddEntry("Role/Ranged", "レンジ");
            AddEntry("Role/Caster", "キャスター");
            AddEntry("Job/PLD", "ナイト");
            AddEntry("Job/WAR", "戦士");
            AddEntry("Job/DRK", "暗黒騎士");
            AddEntry("Job/GNB", "ガンブレイカー");
            AddEntry("Job/WHM", "白魔道士");
            AddEntry("Job/SCH", "学者");
            AddEntry("Job/AST", "占星術師");
            AddEntry("Job/SGE", "賢者");
            AddEntry("Job/MNK", "モンク");
            AddEntry("Job/DRG", "竜騎士");
            AddEntry("Job/NIN", "忍者");
            AddEntry("Job/SAM", "侍");
            AddEntry("Job/RPR", "リーパー");
            AddEntry("Job/BRD", "吟遊詩人");
            AddEntry("Job/MCH", "機工士");
            AddEntry("Job/DNC", "踊り子");
            AddEntry("Job/BLM", "黒魔道士");
            AddEntry("Job/SMN", "召喚士");
            AddEntry("Job/RDM", "赤魔道士");
            AddEntry("Signs/None", "なし");
            AddEntry("Signs/Attack1", "攻撃 1");
            AddEntry("Signs/Attack2", "攻撃 2");
            AddEntry("Signs/Attack3", "攻撃 3");
            AddEntry("Signs/Attack4", "攻撃 4");
            AddEntry("Signs/Attack5", "攻撃 5");
            AddEntry("Signs/Bind1", "足止め 1");
            AddEntry("Signs/Bind2", "足止め 2");
            AddEntry("Signs/Bind3", "足止め 3");
            AddEntry("Signs/Ignore1", "禁止 1");
            AddEntry("Signs/Ignore2", "禁止 2");
            AddEntry("Signs/Circle", "まる");
            AddEntry("Signs/Plus", "プラス");
            AddEntry("Signs/Square", "四角");
            AddEntry("Signs/Triangle", "三角");
            AddEntry("Signs/AttackNext", "次の攻撃マーカー");
            AddEntry("Signs/BindNext", "次の足止めマーカー");
            AddEntry("Signs/IgnoreNext", "次の禁止マーカー");
            AddEntry("Automarker/ManualPreset", "マニュアル/手動");
            AddEntry("Automarker/PrioType/PartyMember", "プレイヤー");
            AddEntry("Automarker/PrioType/PartyListOrder", "PTリスト順");
            AddEntry("Automarker/PrioType/PartyListCustom", "任意のPTリスト順");
            AddEntry("Automarker/PrioType/Alphabetic", "アルファベット順");
            AddEntry("Automarker/PrioType/Trinity", "THD順");
            AddEntry("Automarker/PrioType/Role", "ロール順");
            AddEntry("Automarker/PrioType/Job", "ジョブ順");
            AddEntry("Automarker/PrioType/CongaX", "西-東 整列");
            AddEntry("Automarker/PrioType/CongaY", "北-南 整列");
            AddEntry("Automarker/PrioType/Player", "プレイヤー");
            AddEntry("Automarker/PrioType/Player/FillFromPartyList", "現在のパーティから");
            AddEntry("Automarker/PrioType/Player/FillFromCongaLine", "西-東の整列順");
            AddEntry("Automarker/PrioType/PlCustom/FillFromCongaLine", "西-東の整列順");
            AddEntry("Automarker/PrioType/PartyListOrder/Reversed", "上から下へではなく、下から上へ並べ替える");
            AddEntry("Automarker/PrioType/Alphabetic/Reversed", "昇順ではなく、降順で並べ替える");
            AddEntry("Automarker/PrioType/CongaX/Reversed", "西-東ではなく、東-西で並べ替える。");
            AddEntry("Automarker/PrioType/CongaY/Reversed", "北-南ではなく、南-北で並べ替える。");
            AddEntry("Automarker/TimingType/InheritDesc", "タイミング設定を基本設定から継承");
            AddEntry("MainMenu/Settings/QuickToggles", "クイックトグル");
            AddEntry("MainMenu/Settings/QuickToggles/Info", "これらの設定により、必要に応じて素早く機能を無効化することができます。コンテンツや種類に関係なく、考えられるすべてのソースが影響を受けます。");
            AddEntry("MainMenu/Settings/QuickToggles/Automarkers", "オートマーカーを許可する");
            AddEntry("MainMenu/Settings/QuickToggles/Overlays", "描画とオーバーレイを許可する");
            AddEntry("MainMenu/Settings/QuickToggles/Sound", "サウンドを許可する");
            AddEntry("MainMenu/Settings/QuickToggles/Hacks", "ハックやゲーム改変を許可する");
            AddEntry("MainMenu/Settings/QuickToggles/Automation", "自動化機能を許可する");
            AddEntry("MainMenu/Status", "ステータス");
            AddEntry("MainMenu/Content", "コンテンツ");
            AddEntry("MainMenu/Other", "その他");            
            AddEntry("MainMenu/Settings", "設定");
            AddEntry("MainMenu/Settings/UiSettings", "UI設定");
            AddEntry("MainMenu/Settings/Language", "言語");
            AddEntry("MainMenu/Settings/AdvancedOptions", "コンテンツアイテムに常に詳細オプションを表示する");
            AddEntry("MainMenu/Settings/DebugSettings", "デバッグ設定");
            AddEntry("MainMenu/Settings/DebugSettings/QueueFramework", "フレームワークスレッドにエンキューする");
            AddEntry("MainMenu/Settings/DebugSettings/DelegateDebug", "イベント発生試験場");
            AddEntry("MainMenu/Settings/DebugSettings/Config", "デバッグ用設定");
            AddEntry("MainMenu/Settings/DebugSettings/LoadConfig", "設定をロードする");
            AddEntry("MainMenu/Settings/DebugSettings/SaveConfig", "設定をセーブする");
            AddEntry("MainMenu/Settings/DebugSettings/BackupConfig", "設定のバックアップを作成");
            AddEntry("MainMenu/Settings/DebugSettings/ExportConfig", "設定のエクスポート");
            AddEntry("MainMenu/Settings/DebugSettings/ImportConfig", "設定のインポート");
            AddEntry("MainMenu/Settings/DebugSettings/CopyToClipboard", "設定をクリップボードに保存");
            AddEntry("MainMenu/Settings/DebugSettings/PasteFromClipboard", "クリップボードの設定を読み込む");
            AddEntry("MainMenu/Settings/DebugOnlyLogAutomarkers", "オートマーカーを実際に適用するのではなく、ログのみ記録する");
            AddEntry("MainMenu/Settings/ShowShortcut", "ウィンドウを閉じた時にショートカットを表示する");
            AddEntry("MainMenu/Settings/NagAboutStreaming", "視覚的影響を与える可能性のある機能が有効化されている場合のストリーミングに関する注意喚起");
            AddEntry("MainMenu/Settings/AutomarkerSettings", "オートマーカーの設定");
            AddEntry("MainMenu/Settings/AutomarkersSoftDesc", "ソフトオートマーカーは、クライアントサイドのマーカーで、サーバーに送信されないため、他のプレイヤーからも見えません。表示方法は若干異なりますが、マーカー自体はインゲームの表示と同じものです。");
            AddEntry("MainMenu/Settings/AutomarkersSoft", "ソフトオートマーカーを使う");
            AddEntry("MainMenu/Settings/AutomarkersSoftPermsMissing", "ソフトオートマーカーは、別マーカーとして画面に描画されるため、描画の許可が必要です。'{2}'の中の'{1}'から'{0}'を有効にすることで描画を許可してください。");
            AddEntry("MainMenu/Settings/RemoveAutomarkers", "すべてのマークを強制的に除去");
            AddEntry("MainMenu/Settings/RemoveMarkersAfterCombatEnd", "戦闘終了後、すべてのマークを除去する");
            AddEntry("MainMenu/Settings/RemoveMarkersAfterWipe", "ワイプ後、すべてのマークを除去する");
            AddEntry("MainMenu/Settings/AutomarkersCommands", "通常のマーキング機能が有効でも、古いコマンドインジェクションを使用します。");
            AddEntry("MainMenu/Settings/AutomarkersInitialApplicationDelay", "マーカー初期付与までの遅延時間(指定範囲内でランダム)");
            AddEntry("MainMenu/Settings/AutomarkersSubsequentApplicationDelay", "マーカーの付与間隔(指定範囲内のランダムな間隔)");
            AddEntry("MainMenu/Settings/AutomarkerSeconds", "秒");
            AddEntry("MainMenu/Settings/SoftmarkerSettings", "ソフトマーカーの設定");
            AddEntry("MainMenu/Settings/SoftmarkerPreviewActive", "このメニューを開いている間、使用可能なソフトマーカーの一部がプレビューとして順番にキャラクター上に表示されます。このとき、他のソフトマーカーは表示されません。");
            AddEntry("MainMenu/Settings/SoftmarkerTint", "マーカー染色");
            AddEntry("MainMenu/Settings/SoftmarkerBounce", "マーカーを跳ねさせる");
            AddEntry("MainMenu/Settings/SoftmarkerBlink", "マーカーを点滅させる");
            AddEntry("MainMenu/Settings/SoftmarkerScaling", "マーカーのサイズ倍率");
            AddEntry("MainMenu/Settings/SoftmarkerOffsetWorld", "ゲーム内座標でのマーカーオフセット");
            AddEntry("MainMenu/Settings/SoftmarkerOffsetScreen", "スクリーン座標でのマーカーオフセット");
            AddEntry("MainMenu/Settings/OpcodeSettings", "オペコードの設定");
            AddEntry("MainMenu/Settings/LogUnhandledOpcodes", "未処理のオペコードをログに記録する");
            AddEntry("MainMenu/Settings/OpcodeUrl", "オペコードURL");
            AddEntry("MainMenu/Settings/OpcodeRegion", "オペコードのリージョン");
            AddEntry("MainMenu/Settings/OpcodeReload", "オペコードを再読み込み");
            AddEntry("MainMenu/About", "概要");
            AddEntry("Content/missing", "申し訳ありませんが、現時点でこのコンテンツはご利用いただけません!");
            AddEntry("Content/Debug", "デバッグ・開発用ツール");
            AddEntry("Content/Debug/Enabled", "有効");
            AddEntry("Content/Debug/Debugger", "デバッガー");
            AddEntry("Content/Debug/Debugger/Enabled", "有効");
            AddEntry("Content/Miscellaneous/Hack", "ハック");
            AddEntry("Content/Miscellaneous/Hack/Enabled", "有効");
            AddEntry("Content/Miscellaneous/Hack/Teleporter", "テレポート");
            AddEntry("Content/Miscellaneous/Hack/Teleporter/Enabled", "有効");
            AddEntry("Content/Miscellaneous/Hack/Teleporter/X", "X");
            AddEntry("Content/Miscellaneous/Hack/Teleporter/Y", "Y");
            AddEntry("Content/Miscellaneous/Hack/Teleporter/Z", "Z");
            AddEntry("Content/Miscellaneous/Hack/Teleporter/GetCurrent", "現在位置の取得");
            AddEntry("Content/Miscellaneous/Hack/Teleporter/Teleport", "テレポート");
            AddEntry("Content/Miscellaneous/Hack/Teleporter/PlayersNearby", "近くのプレイヤー");
            AddEntry("Content/Miscellaneous/Hack/Teleporter/AllowRiskyTeleport", "近くにプレイヤーがいてもテレポートができるようにする");
            AddEntry("Content/Miscellaneous/Automation", "自動化");
            AddEntry("Content/Miscellaneous/Automation/Enabled", "有効");
            AddEntry("Content/Miscellaneous/Automation/FishForever", "Fish on repeat");
            AddEntry("Content/Miscellaneous/Automation/FishForever/Enabled", "有効");
            AddEntry("Content/Miscellaneous/Automation/FishForever/IgnoreLight", "弱震は無視");
            AddEntry("Content/Miscellaneous/Automation/FishForever/IgnoreMedium", "強震は無視");
            AddEntry("Content/Miscellaneous/Automation/FishForever/IgnoreHeavy", "激震は無視");
            AddEntry("Content/Miscellaneous/Automation/FishForever/UsePatience2", "ペーシェンスIIを使う");
            AddEntry("Content/Miscellaneous/Automation/FishForever/UseMooch", "泳がせ釣りを使う");
            AddEntry("Content/Miscellaneous/Automation/FishForever/UseMooch2", "泳がせ釣りⅡを使う");
            AddEntry("Content/Miscellaneous/Automation/FishForever/UseThaliakFavor", "サリャクの恩寵を使う");
            AddEntry("Content/Miscellaneous/Automation/FishForever/ReleaseEverything", "全てをリリースする");
            AddEntry("Content/Miscellaneous/Automation/FishForever/Food", "食事を使う");
            AddEntry("Content/Miscellaneous/VisualEnhancement", "視覚的な強化");
            AddEntry("Content/Miscellaneous/VisualEnhancement/Enabled", "有効");
            AddEntry("Content/Miscellaneous/VisualEnhancement/Hitbox", "ヒットボックス");
            AddEntry("Content/Miscellaneous/VisualEnhancement/Hitbox/Enabled", "有効");
            AddEntry("Content/Miscellaneous/VisualEnhancement/Hitbox/HitboxColor", "ヒットボックスの色");
            AddEntry("Content/Miscellaneous/VisualEnhancement/Hitbox/CastColor", "キャストインジケーターの色");
            AddEntry("Content/Miscellaneous/VisualEnhancement/Hitbox/DrawOnEnemies", "敵にハイライトを描画する");
            AddEntry("Content/Miscellaneous/VisualEnhancement/Hitbox/DrawOnPlayers", "プレイヤーにハイライトを描画する");
            AddEntry("Content/Miscellaneous/VisualEnhancement/Hitbox/OnlyCurrentTarget", "現在のターゲットにのみ描画を行う");
            AddEntry("Content/Miscellaneous/VisualEnhancement/Hitbox/ShowCasts", "ヒットボックスにキャスティングインジケーターを表示");
            AddEntry("Content/Debug/Debugger/ObjectMonitor", "オブジェクトモニター");
            AddEntry("Content/Debug/Debugger/ObjectMonitor/Enabled", "有効");
            AddEntry("Content/Debug/Debugger/ObjectMonitor/TextColor", "タグの文字色");
            AddEntry("Content/Debug/Debugger/ObjectMonitor/ShowTextBg", "文字の背景を表示する");
            AddEntry("Content/Debug/Debugger/ObjectMonitor/BgColor", "タグの背景色");
            AddEntry("Content/Debug/Debugger/ObjectMonitor/TagPlayers", "タグ:プレイヤー");
            AddEntry("Content/Debug/Debugger/ObjectMonitor/TagEventObjs", "タグ:イベントオブジェクト");
            AddEntry("Content/Debug/Debugger/ObjectMonitor/TagBattleNpcs", "タグ:戦闘NPC");
            AddEntry("Content/Debug/Debugger/ObjectMonitor/TagOthers", "タグ:その他のすべての不特定多数のタイプ");
            AddEntry("Content/Debug/Debugger/ObjectMonitor/OnlyVisible", "可視オブジェクトのみを表示する");
            AddEntry("Content/Debug/Debugger/ObjectMonitor/OnlyTargettable", "ターゲット可能なオブジェクトのみを表示する");
            AddEntry("Content/Debug/Debugger/EventLogger", "イベントロガー");
            AddEntry("Content/Debug/Debugger/EventLogger/Enabled", "有効");
            AddEntry("Content/Debug/Debugger/EventLogger/LogInCombat", "戦闘中のログを取得する");
            AddEntry("Content/Debug/Debugger/EventLogger/LogOutsideCombat", "戦闘時以外のログを取得する");
            AddEntry("Content/Debug/Debugger/EventLogger/LogToDalamudLog", "Dalamudログに出力する");
            AddEntry("Content/Debug/Debugger/EventLogger/LogToFile", "ログをファイルに出力する");
            AddEntry("Content/Debug/Debugger/EventLogger/LogFilename", "ログのファイル名");
            AddEntry("Content/Debug/Debugger/EventLogger/CurrentLogFilename", "現在のログファイル");
            AddEntry("Content/Debug/Debugger/StressTest", "ストレステスト");
            AddEntry("Content/Debug/Debugger/StressTest/Enabled", "有効");
            AddEntry("Content/Debug/Debugger/StressTest/TestAutomarkers", "オートマーカーのテスト");
            AddEntry("Content/Debug/Debugger/StressTest/TestAutomarkerRapidfire", "オートマーカーテスト 高速付与/除去");
            AddEntry("Content/Debug/Debugger/StressTest/AmFails", "オートマーカーのエラー");
            AddEntry("Content/Miscellaneous", "その他");
            AddEntry("Content/Miscellaneous/Enabled", "有効");
            AddEntry("Content/Miscellaneous/Radar", "レーダー");
            AddEntry("Content/Miscellaneous/Radar/Enabled", "有効");
            AddEntry("Content/Miscellaneous/Radar/DrawEnemies", "敵の描画");
            AddEntry("Content/Miscellaneous/Radar/DrawEnemies/Enabled", "有効");
            AddEntry("Content/Miscellaneous/Radar/DrawEnemies/ObjectColor", "敵の表示色");
            AddEntry("Content/Miscellaneous/Radar/DrawEnemies/DrawLine", "近くの敵に対して線を描画する");
            AddEntry("Content/Miscellaneous/Radar/DrawEnemies/ShowNames", "ネームタグを表示");
            AddEntry("Content/Miscellaneous/Radar/DrawEnemies/IncludeDistance", "ネームタグに距離を記載する");
            AddEntry("Content/Miscellaneous/Radar/DrawEnemies/TextColor", "ネームタグの文字色");
            AddEntry("Content/Miscellaneous/Radar/DrawEnemies/ShowNameBg", "ネームタグの背景を表示する");
            AddEntry("Content/Miscellaneous/Radar/DrawEnemies/BgColor", "ネームタグの背景色");
            AddEntry("Content/Miscellaneous/Radar/DrawPlayers", "プレイヤーの描画");
            AddEntry("Content/Miscellaneous/Radar/DrawPlayers/Enabled", "有効");
            AddEntry("Content/Miscellaneous/Radar/DrawPlayers/ObjectColor", "プレイヤーの表示色");
            AddEntry("Content/Miscellaneous/Radar/DrawPlayers/ShowNames", "ネームタグを表示");
            AddEntry("Content/Miscellaneous/Radar/DrawPlayers/IncludeDistance", "ネームタグに距離を記載する");
            AddEntry("Content/Miscellaneous/Radar/DrawPlayers/TextColor", "ネームタグの文字色");
            AddEntry("Content/Miscellaneous/Radar/DrawPlayers/ShowNameBg", "ネームタグの背景を表示する");
            AddEntry("Content/Miscellaneous/Radar/DrawPlayers/BgColor", "ネームタグの背景色");
            AddEntry("Content/Miscellaneous/Radar/DrawPlayers/ShowJobIcon", "ジョブアイコンを表示する");
            AddEntry("Content/Miscellaneous/Radar/DrawPlayers/ShowHpBar", "HPを表示する");
            AddEntry("Content/Miscellaneous/Radar/DrawGatheringPoint", "採集ポイントの描画");
            AddEntry("Content/Miscellaneous/Radar/DrawGatheringPoint/Enabled", "有効");
            AddEntry("Content/Miscellaneous/Radar/DrawGatheringPoint/ObjectColor", "オブジェクト表示色");
            AddEntry("Content/Miscellaneous/Radar/DrawGatheringPoint/OnlyOnGatherers", "ギャザラージョブの場合のみ表示する");
            AddEntry("Content/Miscellaneous/Radar/DrawGatheringPoint/ShowNames", "ネームタグを表示");
            AddEntry("Content/Miscellaneous/Radar/DrawGatheringPoint/IncludeDistance", "ネームタグに距離を記載する");
            AddEntry("Content/Miscellaneous/Radar/DrawGatheringPoint/TextColor", "ネームタグの文字色");
            AddEntry("Content/Miscellaneous/Radar/DrawGatheringPoint/ShowNameBg", "ネームタグの背景を表示する");
            AddEntry("Content/Miscellaneous/Radar/DrawGatheringPoint/BgColor", "ネームタグの背景色");
            AddEntry("Content/Miscellaneous/Radar/DrawGatheringPoint/ShowHidden", "隠しノードの表示");
            AddEntry("Content/Miscellaneous/Radar/DrawGatheringPoint/HiddenColor", "隠しノードの表示色");
            AddEntry("Content/Miscellaneous/Radar/DrawGatheringPoint/ShowNameOnHidden", "隠しノードにネームタグを表示");
            AddEntry("Content/Miscellaneous/Radar/DrawGatheringPoint/ShowNameBgOnHidden", "隠しノードの背景を表示する");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder", "ファインダー");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/Enabled", "有効");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/LookFor", "探す対象");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/LookFor/AddNew", "リストに追加");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/LookFor/Remove", "選択したものを削除");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/LookFor/Clear", "全削除");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/IncludeRankS", "Sランクを全て選択");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/IncludeRankA", "Aランクを全て選択");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/IncludeRankB", "Bランクを全て選択");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/IncludeIslandRare", "無人島のレア動物を含める");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/SoundAlert", "発見した場合にサウンド通知を有効にする");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/ObjectColor", "オブジェクトの表示色");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/SRankColor", "Sランクの表示色");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/ARankColor", "Aランクの表示色");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/BRankColor", "Bランクの表示色");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/RareAnimalColor", "レア動物の表示色");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/ShowNames", "ネームタグの表示");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/IncludeDistance", "ネームタグに距離を記載する");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/TextColor", "ネームタグの文字色");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/ShowNameBg", "ネームタグの背景を表示する");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/BgColor", "ネームタグの背景色");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/LastSeen", "直近で最後の発見");
            AddEntry("Content/Miscellaneous/Radar/AlertFinder/Never", "未発見");
            AddEntry("Content/DeepDungeon", "ディープダンジョン");
            AddEntry("Content/DeepDungeon/Enabled", "有効");
            AddEntry("Content/DeepDungeon/AccursedHoard", "埋もれた財宝");
            AddEntry("Content/DeepDungeon/EurekaOrthos", "オルト・エウレカ");
            AddEntry("Content/DeepDungeon/EurekaOrthos/Enabled", "有効");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawEnemies", "敵の描画");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawEnemies/Enabled", "有効");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawEnemies/ObjectColor", "敵の表示色");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawEnemies/DrawLine", "近くの敵に対して線を描画する");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawEnemies/ShowNames", "ネームタグを表示");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawEnemies/IncludeDistance", "ネームタグに距離を記載する");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawEnemies/TextColor", "ネームタグの文字色");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawEnemies/ShowNameBg", "ネームタグの背景を表示する");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawEnemies/BgColor", "ネームタグの背景色");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawPylons", "塔の描画");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawPylons/Enabled", "有効");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawPylons/ObjectColor", "塔の表示色");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawPylons/ShowNames", "ネームタグを表示");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawPylons/IncludeDistance", "ネームタグに距離を記載する");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawPylons/TextColor", "ネームタグの文字色");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawPylons/ShowNameBg", "ネームタグの背景を表示する");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawPylons/BgColor", "ネームタグの背景色");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawChests", "宝箱と埋もれた財宝の描画");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawChests/Enabled", "有効");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawChests/GoldColor", "金の宝箱の表示色");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawChests/SilverColor", "銀の宝箱の表示色");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawChests/BronzeColor", "銅の宝箱の表示色");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawChests/BandedColor", "木の宝箱の表示色");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawChests/HoardColor", "埋もれた財宝の表示色");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawChests/ShowNames", "ネームタグを表示");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawChests/IncludeDistance", "ネームタグに距離を記載する");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawChests/TextColor", "ネームタグの文字色");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawChests/ShowNameBg", "ネームタグの背景を表示する");
            AddEntry("Content/DeepDungeon/EurekaOrthos/DrawChests/BgColor", "ネームタグの背景色");
            AddEntry("Content/DeepDungeon/HeavenOnHigh", "アメノミハシラ");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/Enabled", "有効");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawEnemies", "敵の描画");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawEnemies/Enabled", "有効");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawEnemies/ObjectColor", "敵の表示色");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawEnemies/DrawLine", "近くの敵に対して線を描画する");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawEnemies/ShowNames", "ネームタグを表示");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawEnemies/IncludeDistance", "ネームタグに距離を記載する");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawEnemies/TextColor", "ネームタグの文字色");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawEnemies/ShowNameBg", "ネームタグの背景を表示する");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawEnemies/BgColor", "ネームタグの背景色");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawPylons", "塔の描画");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawPylons/Enabled", "有効");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawPylons/ObjectColor", "塔の表示色");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawPylons/ShowNames", "ネームタグを表示");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawPylons/IncludeDistance", "ネームタグに距離を記載する");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawPylons/TextColor", "ネームタグの文字色");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawPylons/ShowNameBg", "ネームタグの背景を表示する");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawPylons/BgColor", "ネームタグの背景色");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawChests", "宝箱と埋もれた財宝の描画");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawChests/Enabled", "有効");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawChests/GoldColor", "金の宝箱の表示色");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawChests/SilverColor", "銀の宝箱の表示色");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawChests/BronzeColor", "銅の宝箱の表示色");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawChests/BandedColor", "木の宝箱の表示色");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawChests/HoardColor", "埋もれた財宝の表示色");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawChests/ShowNames", "ネームタグを表示");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawChests/IncludeDistance", "ネームタグに距離を記載する");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawChests/TextColor", "ネームタグの文字色");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawChests/ShowNameBg", "ネームタグの背景を表示する");
            AddEntry("Content/DeepDungeon/HeavenOnHigh/DrawChests/BgColor", "ネームタグの背景色");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead", "死者の宮殿");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/Enabled", "有効");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawEnemies", "敵の描画");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawEnemies/Enabled", "有効");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawEnemies/ObjectColor", "敵の表示色");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawEnemies/DrawLine", "近くの敵に対して線を描画する");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawEnemies/ShowNames", "ネームタグを表示");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawEnemies/IncludeDistance", "ネームタグに距離を記載する");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawEnemies/TextColor", "ネームタグの文字色");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawEnemies/ShowNameBg", "ネームタグの背景を表示する");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawEnemies/BgColor", "ネームタグの背景色");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawPylons", "塔の描画");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawPylons/Enabled", "有効");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawPylons/ObjectColor", "Cairn highlight color");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawPylons/ShowNames", "ネームタグを表示");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawPylons/IncludeDistance", "ネームタグに距離を記載する");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawPylons/TextColor", "ネームタグの文字色");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawPylons/ShowNameBg", "ネームタグの背景を表示する");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawPylons/BgColor", "ネームタグの背景色");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawChests", "宝箱と埋もれた財宝の描画");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawChests/Enabled", "有効");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawChests/GoldColor", "金の宝箱の表示色");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawChests/SilverColor", "銀の宝箱の表示色");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawChests/BronzeColor", "銅の宝箱の表示色");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawChests/BandedColor", "木の宝箱の表示色");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawChests/HoardColor", "埋もれた財宝の表示色");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawChests/ShowNames", "ネームタグを表示");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawChests/IncludeDistance", "ネームタグに距離を記載する");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawChests/TextColor", "ネームタグの文字色");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawChests/ShowNameBg", "ネームタグの背景を表示する");
            AddEntry("Content/DeepDungeon/PalaceOfTheDead/DrawChests/BgColor", "ネームタグの背景色");
            AddEntry("Content/Raid", "レイド");
            AddEntry("Content/Raid/Enabled", "有効");
            AddEntry("Content/EndwalkerRaids", "暁月のフィナーレ (6.x)");
            AddEntry("Content/EndwalkerRaids/Enabled", "有効");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos", "万魔殿パンデモニウム零式：煉獄編 (6.2)");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/Enabled", "有効");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM", "P7s(3層) 魔印創成/魔印創成･極 オートマーカー");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/Enabled", "有効");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/SelfMarkOnly", "自分にのみマーキングする");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/AsSoftmarker", "クライアント側のソフトマーカーとして表示する");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/Signs", "マーカー設定");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/Signs/ShareTarget", "頭割り対象");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/Signs/Share1", "頭割り 1");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/Signs/Share2", "頭割り 2");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/Signs/Share3", "頭割り 3");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/Signs/Spread1", "散開 1");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/Signs/Spread2", "散開 2");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/Signs/Spread3", "散開 3");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/Signs/Spread4", "散開 4");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/Prio", "優先度設定");
            AddEntry("Content/EndwalkerRaids/EwRaidAbyssos/InviolateAM/Test", "割り振りテスト(優先順位を考慮する)");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios", "万魔殿パンデモニウム零式：天獄編 (6.4)");
            AddEntry("Content/EndwalkerRaids/EwRaidAnabaseios/Enabled", "有効");
            AddEntry("Content/Trial", "討伐・討滅戦");
            AddEntry("Content/Trial/Enabled", "有効");
            AddEntry("Content/Ultimate", "絶レイド");
            AddEntry("Content/Ultimate/Enabled", "有効");
            AddEntry("Content/Ultimate/UltUcob", "絶バハムート討滅戦");
            AddEntry("Content/Ultimate/UltUcob/Enabled", "有効");
            AddEntry("Content/Ultimate/UltUcob/ChainLightningAm", "(P2) チェインライトニングオートマーカー");
            AddEntry("Content/Ultimate/UltUcob/ChainLightningAm/Enabled", "有効");
            AddEntry("Content/Ultimate/UltUcob/ChainLightningAm/SelfMarkOnly", "自分にのみマーキングする");
            AddEntry("Content/Ultimate/UltUcob/ChainLightningAm/AsSoftmarker", "クライアント側のソフトマーカーとして表示する");
            AddEntry("Content/Ultimate/UltUcob/ChainLightningAm/Signs", "マーカー設定");
            AddEntry("Content/Ultimate/UltUcob/ChainLightningAm/Signs/Lightning1", "ライトニング1");
            AddEntry("Content/Ultimate/UltUcob/ChainLightningAm/Signs/Lightning2", "ライトニング2");
            AddEntry("Content/Ultimate/UltUcob/ChainLightningAm/Test", "割り振りテスト(優先順位を考慮する)");
            AddEntry("Content/Ultimate/UltWeaponsRefrain", "絶アルテマウェポン破壊作戦");
            AddEntry("Content/Ultimate/UltWeaponsRefrain/Enabled", "有効");
            AddEntry("Content/Ultimate/UltWeaponsRefrain/GaolAM", "(P3) タイタンジェイルオートマーカー");
            AddEntry("Content/Ultimate/UltWeaponsRefrain/GaolAM/Enabled", "有効");
            AddEntry("Content/Ultimate/UltWeaponsRefrain/GaolAM/SelfMarkOnly", "自分にのみマーキングする");
            AddEntry("Content/Ultimate/UltWeaponsRefrain/GaolAM/AsSoftmarker", "クライアント側のソフトマーカーとして表示する");
            AddEntry("Content/Ultimate/UltWeaponsRefrain/GaolAM/Signs", "マーカー設定");
            AddEntry("Content/Ultimate/UltWeaponsRefrain/GaolAM/Signs/Gaol1", "ジェイル 1");
            AddEntry("Content/Ultimate/UltWeaponsRefrain/GaolAM/Signs/Gaol2", "ジェイル 2");
            AddEntry("Content/Ultimate/UltWeaponsRefrain/GaolAM/Signs/Gaol3", " 3");
            AddEntry("Content/Ultimate/UltWeaponsRefrain/GaolAM/Prio", "優先度設定");
            AddEntry("Content/Ultimate/UltWeaponsRefrain/GaolAM/Test", "割り振りテスト(優先順位を考慮する)");
            AddEntry("Content/Ultimate/UltDragonsongReprise", "絶竜詩戦争");
            AddEntry("Content/Ultimate/UltDragonsongReprise/Enabled", "有効");
            AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM", "(P2) メテオオートマーカー");
            AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/Enabled", "有効");
            AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/SelfMarkOnly", "自分にのみマーキングする");
            AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/AsSoftmarker", "クライアント側のソフトマーカーとして表示する");
            AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/Signs", "マーカー設定");
            AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/Signs/Meteor1", "メテオ 1");
            AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/Signs/Meteor2", "メテオ 2");
            AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/Signs/MeteorRole1", "メテオロール 1");
            AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/Signs/MeteorRole2", "メテオロール 2");
            AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/Signs/NonMeteor1", "メテオ無し 1");
            AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/Signs/NonMeteor2", "メテオ無し 2");
            AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/Signs/NonMeteor3", "メテオ無し 3");
            AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/Signs/NonMeteor4", "メテオ無し 4");
            AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/Prio", "優先度設定");
            AddEntry("Content/Ultimate/UltDragonsongReprise/MeteorAM/Test", "割り振りテスト(優先順位を考慮する)");
            AddEntry("Content/Ultimate/UltDragonsongReprise/ChainLightningAm", "(P5) チェインライトニングオートマーカー");
            AddEntry("Content/Ultimate/UltDragonsongReprise/ChainLightningAm/Enabled", "有効");
            AddEntry("Content/Ultimate/UltDragonsongReprise/ChainLightningAm/SelfMarkOnly", "自分にのみマーキングする");
            AddEntry("Content/Ultimate/UltDragonsongReprise/ChainLightningAm/AsSoftmarker", "クライアント側のソフトマーカーとして表示する");
            AddEntry("Content/Ultimate/UltDragonsongReprise/ChainLightningAm/Signs", "マーカー設定");
            AddEntry("Content/Ultimate/UltDragonsongReprise/ChainLightningAm/Signs/Lightning1", "ライトニング 1");
            AddEntry("Content/Ultimate/UltDragonsongReprise/ChainLightningAm/Signs/Lightning2", "ライトニング 2");
            AddEntry("Content/Ultimate/UltDragonsongReprise/ChainLightningAm/Test", "割り振りテスト(優先順位を考慮する)");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM", "(P6)邪念の炎オートマーカー");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Enabled", "有効");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/SelfMarkOnly", "自分にのみマーキングする");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/AsSoftmarker", "クライアント側のソフトマーカーとして表示する");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Signs", "マーカー設定");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Signs/Presets/LPDU", "LPDU");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Signs/Presets/ElementalDC", "Elemental DC");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Signs/Stack1_1", "頭割り 1 (デバフ有り)");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Signs/Stack1_2", "頭割り 1 (デバフ無し)");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Signs/Stack2_1", "頭割り 2 (デバフ有り)");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Signs/Stack2_2", "頭割り 2 (デバフ無し)");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Signs/Spread1", "散開 1");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Signs/Spread2", "散開 2");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Signs/Spread3", "散開 3");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Signs/Spread4", "散開 4");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Prio", "優先度設定");
            AddEntry("Content/Ultimate/UltDragonsongReprise/WrothAM/Test", "割り振りテスト(優先順位を考慮する)");
            AddEntry("Content/Ultimate/UltOmegaProtocol", "絶オメガ検証戦");
            AddEntry("Content/Ultimate/UltOmegaProtocol/Enabled", "有効");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ChibiOmega", "(P1/P3) オメガモデルのサイズを小さくする");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ChibiOmega/Enabled", "有効");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ChibiOmega/ApplyP1", "P1 ビートルオメガに適用する");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ChibiOmega/SizeP1", "P1 ビートルオメガのサイズ:");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ChibiOmega/ApplyP3", "P3ファイナルオメガに適用する");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ChibiOmega/SizeP3", "P3 ファイナルオメガのサイズ:");
            AddEntry("Content/Ultimate/UltOmegaProtocol/GlitchTether", "(P2/P5) グリッチ線の距離インジケーター");
            AddEntry("Content/Ultimate/UltOmegaProtocol/GlitchTether/Enabled", "有効");
            AddEntry("Content/Ultimate/UltOmegaProtocol/GlitchTether/TetherOkColor", "安全圏内の色");
            AddEntry("Content/Ultimate/UltOmegaProtocol/GlitchTether/TetherSafeColor", "安全な距離の色");
            AddEntry("Content/Ultimate/UltOmegaProtocol/GlitchTether/TetherNokColor", "間違った距離の色");
            AddEntry("Content/Ultimate/UltOmegaProtocol/GlitchTether/Test", "近くの戦闘対象にランダムで線を付与してテスト");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ProgramLoopAM", "(P1) サークルプログラムオートマーカー");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ProgramLoopAM/Enabled", "有効");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ProgramLoopAM/SelfMarkOnly", "自分にのみマーキングする");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ProgramLoopAM/AsSoftmarker", "クライアント側のソフトマーカーとして表示する");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ProgramLoopAM/Signs", "マーカー設定");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ProgramLoopAM/Signs/Tower1", "次の塔踏み 1");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ProgramLoopAM/Signs/Tower2", "次の塔踏み 2");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ProgramLoopAM/Signs/Tether1", "次の線取り 1");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ProgramLoopAM/Signs/Tether2", "次の線取り 2");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ProgramLoopAM/Prio", "優先度設定");
            AddEntry("Content/Ultimate/UltOmegaProtocol/ProgramLoopAM/Test", "ランダムに割り当てテスト");
            AddEntry("Content/Ultimate/UltOmegaProtocol/PantokratorAM", "(P1) パントクラトルオートマーカー");
            AddEntry("Content/Ultimate/UltOmegaProtocol/PantokratorAM/Enabled", "有効");
            AddEntry("Content/Ultimate/UltOmegaProtocol/PantokratorAM/SelfMarkOnly", "自分にのみマーキングする");
            AddEntry("Content/Ultimate/UltOmegaProtocol/PantokratorAM/AsSoftmarker", "クライアント側のソフトマーカーとして表示する");
            AddEntry("Content/Ultimate/UltOmegaProtocol/PantokratorAM/Signs", "マーカー設定");
            AddEntry("Content/Ultimate/UltOmegaProtocol/PantokratorAM/Signs/Beam1", "次の頭割りビーム 1");
            AddEntry("Content/Ultimate/UltOmegaProtocol/PantokratorAM/Signs/Beam2", "次の頭割りビーム 2");
            AddEntry("Content/Ultimate/UltOmegaProtocol/PantokratorAM/Signs/Missile1", "次のミサイル 1");
            AddEntry("Content/Ultimate/UltOmegaProtocol/PantokratorAM/Signs/Missile2", "次のミサイル 2");
            AddEntry("Content/Ultimate/UltOmegaProtocol/PantokratorAM/Prio", "優先度設定");
            AddEntry("Content/Ultimate/UltOmegaProtocol/PantokratorAM/Test", "ランダムに割り当てテスト");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM", "(P2) 連携プログラムPT オートマーカー");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Enabled", "有効");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/SelfMarkOnly", "自分にのみマーキングする");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/AsSoftmarker", "クライアント側のソフトマーカーとして表示する");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs", "ファーの際の並び順設定");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs/Presets/BPOG - GPOB", "\xE04C\xE04B\xE04A\xE04D-\xE04D\xE04B\xE04A\xE04C");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs/Presets/BPOG - GOPB", "\xE04C\xE04B\xE04A\xE04D-\xE04D\xE04A\xE04B\xE04C");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs/CrossL", "クロス(左)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs/CrossR", "クロス (右)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs/SquareL", "四角 (左)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs/SquareR", "四角 (右)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs/CircleL", "まる (左)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs/CircleR", "まる (右)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs/TriangleL", "三角 (左)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs/TriangleR", "三角 (右)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs2", "ミドルの際の並び順設定");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs2/Presets/BPOG - BPOG", "\xE04C\xE04B\xE04A\xE04D-\xE04C\xE04B\xE04A\xE04D");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs2/CrossL", "クロス(左)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs2/CrossR", "クロス (右)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs2/SquareL", "四角 (左)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs2/SquareR", "四角 (右)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs2/CircleL", "まる (左)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs2/CircleR", "まる (右)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs2/TriangleL", "三角 (左)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Signs2/TriangleR", "三角 (右)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Prio", "優先度設定");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P2SynergyAM/Test", "ランダムに割り当てテスト");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM", "(P3) フェーズ移行オートマーカー");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/Enabled", "有効");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/SelfMarkOnly", "自分にのみマーキングする");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/AsSoftmarker", "クライアント側のソフトマーカーとして表示する");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/Signs", "マーカー設定");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/Signs/Stack1_1", "頭割り 1 (デバフ有り)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/Signs/Stack1_2", "頭割り 1 (デバフ無し)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/Signs/Stack2_1", "頭割り 2 (デバフ有り)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/Signs/Stack2_2", "頭割り 2 (デバフ無し)");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/Signs/Spread1", "散開 1");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/Signs/Spread2", "散開 2");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/Signs/Spread3", "散開 3");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/Signs/Spread4", "散開 4");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/Prio", "優先度設定");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3TransitionAM/Test", "ランダムに割り当てテスト");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM", "(P3) 検知オートマーカー");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/Enabled", "有効");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/SelfMarkOnly", "自分にのみマーキングする");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/AsSoftmarker", "クライアント側のソフトマーカーとして表示する");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/Signs", "マーカー設定");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/Signs/Monitor1", "検知対象 1");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/Signs/Monitor2", "検知対象 2");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/Signs/Monitor3", "検知対象 3");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/Signs/None1", "検知無し 1");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/Signs/None2", "検知無し 2");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/Signs/None3", "検知無し 3");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/Signs/None4", "検知無し 4");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/Signs/None5", "検知無し 5");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/Prio", "優先度設定");
            AddEntry("Content/Ultimate/UltOmegaProtocol/P3MonitorAM/Test", "ランダムに割り当てテスト");
            AddEntry("Content/Ultimate/UltOmegaProtocol/HelloWorldDrawBossMonitor", "(P3) ボス検知ハイライト");
            AddEntry("Content/Ultimate/UltOmegaProtocol/HelloWorldDrawBossMonitor/Enabled", "有効");
            AddEntry("Content/Ultimate/UltOmegaProtocol/HelloWorldDrawBossMonitor/HighlightColor", "表示色");
            AddEntry("Content/Ultimate/UltOmegaProtocol/HelloWorldDrawBossMonitor/Test", "オーバーレイのテスト");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaAM", "(P5) コード：＊＊＊ミ＊【デルタ】オートマーカー");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaAM/Enabled", "有効");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaAM/SelfMarkOnly", "自分にのみマーキングする");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaAM/AsSoftmarker", "クライアント側のソフトマーカーとして表示する");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaAM/Signs", "マーカー設定");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaAM/Signs/Presets/LPDU", "LPDU / Sausage");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaAM/Signs/Presets/ElementalDC", "Elemental DC");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaAM/Signs/DistantWorld", "ハローワールド:ファー");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaAM/Signs/NearWorld", "ハローワールド:ニアー");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaAM/Test", "ランダムに割り当てテスト");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaDrawBossMonitor", "(P5) コード：＊＊＊ミ＊【デルタ】ボス検知ハイライト");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaDrawBossMonitor/Enabled", "有効");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaDrawBossMonitor/HighlightColor", "表示色");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisDeltaDrawBossMonitor/Test", "オーバーレイのテストy");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM", "(P5) コード：＊＊＊ミ＊【シグマ】オートマーカー");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Enabled", "有効");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/SelfMarkOnly", "自分にのみマーキングする");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/AsSoftmarker", "クライアント側のソフトマーカーとして表示する");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Signs", "マーカー設定");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Signs/Presets/LPDU", "LPDU / Sausage");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Signs/Presets/ElementalDC", "Elemental DC");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Signs/Arm1", "アーム誘導 1");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Signs/Arm2", "アーム誘導 2");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Signs/DistantWorld", "ハローワールド:ファー");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Signs/NearWorld", "ハローワールド:ニアー");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Signs/DistantFarBait", "遠くでファー誘導");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Signs/DistantCloseBait", "近くでファー誘導");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Signs/NearBait1", "ニアー誘導 1");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Signs/NearBait2", "ニアー誘導 2");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Prio", "優先度設定");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisSigmaAM/Test", "ランダムに割り当てテスト");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM", "(P5) コード：＊＊＊ミ＊【オメガ】オートマーカー");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/Enabled", "有効");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/SelfMarkOnly", "自分にのみマーキングする");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/AsSoftmarker", "クライアント側のソフトマーカーとして表示する");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/Signs", "マーカー設定");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/Signs/Presets/LPDU", "LPDU / Sausage");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/Signs/Monitor1", "検知対象 / 線取り 1");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/Signs/Monitor2", "検知対象 / 線取り 2");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/Signs/DistantWorld", "ハローワールド:ファー");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/Signs/NearWorld", "ハローワールド:ニアー");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/Signs/Bait1", "誘導 1");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/Signs/Bait2", "誘導 2");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/Signs/Bait3", "誘導 3");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/Signs/Bait4", "誘導 4");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/Prio", "優先度設定");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaAM/Test", "ランダムに割り当てテスト");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaDrawBossMonitor", "(P5) コード：＊＊＊ミ＊【オメガ】ボス検知ハイライト");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaDrawBossMonitor/Enabled", "有効");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaDrawBossMonitor/HighlightColor", "表示色");
            AddEntry("Content/Ultimate/UltOmegaProtocol/DynamisOmegaDrawBossMonitor/Test", "オーバーレイのテスト");
            #endregion
        }

    }

}
